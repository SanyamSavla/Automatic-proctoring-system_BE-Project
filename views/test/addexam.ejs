<%- include('../partials/teacher-sidenav'); -%>


<div class="main-content" id="panel">
    <div class="container-fluid py-3 bg-primary top-padding" style="border-bottom:0.0625rem solid #e9ecef33 !important;" >
        <div class="row align-items-center">
            <div class="col col-lg-auto text-center text-sm-left">
                <h5 style="font-family: 'LakeShore', sans-serif" class="h2 text-white d-inline-block mb-0 custom-heading">Exam center</h5>
            </div>
           
        </div>
    </div>
    <div>             
                    
                    <div class="modal fade" id="myModal" role="dialog">
                        <div class="modal-dialog modal-lg">
                          <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Add Question</h4>
                              <button type="button" class="close" data-dismiss="modal">&times;</button>
                            
                            </div>
                            <div class="w-100 row" style="padding-left: 15px;">
                            <div class="col-md-8 ">
                                <input type="text" placeholder="Enter your question" class="form-control mb-3" v-model.trim="newQuestion.questionText">
                                <div >
                                    
                                    <div class="form-row">
                                        <input type="text" class="form-control col-md-8 mr-1" name="" id="" placeholder="Enter option A" v-model.trim="newOption">
                                        <input type="text" class="form-control col-md-8 mr-1" name="" id="" placeholder="Enter  option B" v-model.trim="newOption">
                                        <input type="text" class="form-control col-md-8 mr-1" name="" id="" placeholder="Enter  option C " v-model.trim="newOption">
                                        <input type="text" class="form-control col-md-8 mr-1" name="" id="" placeholder="Enter  option D" v-model.trim="newOption">
                                        <button class="col-md-3 btn btn-secondary" @click="addNewOption">Add Option</button>
                                    </div>
                                    
                                </div>
                               
                                
                            </div>
                            <div class="col-md-4">
                                <select class="custom-select" v-model="newQuestion.qType">
                                    <option value="single" selected>Single Correct</option>
                                    <option value="multiple">Multiple Correct</option>
                                    <option value="text">Text Area</option>
                                </select>
                                <div class="mt-2">
                                    <input type="text" class="form-control" placeholder="Enter score" v-model.number="newQuestion.score">
                                </div>
                            </div>
                          <!--   <div class="modal-body">
                              <p>This is a large modal.</p>
                            </div>
                            -->
                        </div>
                            <div class="modal-footer">
                                <div class="w-100 d-flex justify-content-center">
                                    <button class="btn btn-success mb-3" @click="addNewQuestion">Add</button>
                                </div>
                              <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                          
                        </div>
                      </div>

                    
                </div>
            
         
                      
         
        <div class="container w-75 mx-auto border p-0" > 
            <div class="w-100 d-flex border-bottom" style="color: white;">
                
                <div class="container">
                    <% if(error && error.length > 0){ %>
                    <div class="alert alert-danger" role="alert">
                      <%= error %>
                    </div>
                    <% } %> <% if(success && success.length > 0){ %>
                    <div class="alert alert-success" role="alert">
                      <%= success %>
                    </div>
                    <% } %> <% if(warning && warning.length > 0){ %>
                    <div class="alert alert-warning" role="alert">
                      <%= warning %>
                    </div>
                    <% } %> <% if(info && info.length > 0){ %>
                    <div class="alert alert-info" role="alert">
                      <%= info %>
                    </div>
                    <% } %>
                  </div>
                <div class="w-50 text-center" @click="selectTab(1)">
                    Test Settings
                </div>
                <div class="w-50 text-center" @click="selectTab(2)">
                    Questions
                </div>
            </div>
            <div class="w-100 p-5" style="color: white;">
                <div class="w-100" v-if="isFirstTabSelected">
                    <form name="myform" action="/test/addexam" method="post">
                        <div class="form-group">
                            <label>  Test Name </label>
                          <input
                            class="form-control"
                            type="text"
                            name="testName"
                            placeholder="testName"
                          />
                        </div>
                        <div class="form-group">
                          <label>  Test Code </label>
                          <input class="form-control" type="text" name="testcode" placeholder="testcode" />
                        </div>
                        
                        <div class="form-group">
                            <label>  Test Duration </label>
                            <input class="form-control" type="text" name="testDuration" placeholder="Time" />
                        </div>     
                      
                        
                        <div class="form-group">
                            <label>   Neck Movement </label>
                            <select name="disableNeck" value class="form-control">
                              <option value="" selected disabled hidden>Select type</option>
                              <option value="true">TRUE</option>
                              <option value="false">FALSE</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>  Mobile detection: </label>
                            <select name="disableMobile" value class="form-control">
                              <option value="" selected disabled hidden>Select type</option>
                              <option value="true">TRUE</option>
                              <option value="false">FALSE</option>
                            </select>
                        </div>

                        <div class="form-group">
                          <input  class="form-control" type="number" name="totalScore" step="1"
                            placeholder="Score" />
                        </div>
                   
                        
                        <div class="form-group">
                          <button class="btn btn-lg btn-primary btn-block">Submit</button>
                        </div>
                      </form>

                   
                   
                    <!--<div class="col-md-4">
                        <div class="col-md-4">
                            <select style="width:200px" class="custom-select" v-model="test.settings.severity">
                                <option value="strict" selected>Strict</option>
                                <option value="moderate">Moderate</option>
                            </select>
                        </div>

                        <button @click="saveSettings" class="btn btn-info">Save</button>
                    </div>-->
                </div>
              <!--   <div class="w-100" v-else>
                    <div class="w-100 d-flex justify-content-end mb-2">
                        <input type="text" placeholder="Enter Test Name" class="form-control mb" v-model.trim="test.testName">

                        <button type="button" class="btn btn-success btn-lg" data-toggle="modal" data-target="#myModal">Add Question</button>
                       
                    </div>

                 
                    <div class="mx-5 my-3" v-for="(question,i) in test.questions" :key="i">
                       
                            <div class="row">
                                <div class="col-md-9">
                                    <h4>Q.{{ i+1 }} {{ question.questionText }}</h4>
                                    <div v-if="question.qType === 'single'">
                                        <div v-for="(option,i) in question.options" :key="i">
                                            <input type="radio" name="" id=""> {{ option }}
                                        </div>
                                    </div>
                                    <div v-else-if="question.qType === 'multiple'">
                                        <div v-for="(option,i) in question.options" :key="i">
                                            <input type="checkbox" name="" id=""> {{ option }}
                                        </div>
                                    </div>
                                    <div v-else>
                                        <textarea name="" id="" cols="80" rows="5"></textarea>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <p>Points - </p>
                                </div>
                                
                            </div>
                       
                    </div>
                   
                    <div class="mt-3 w-100 d-flex justify-content-center">
                        <button class="btn btn-primary" @click="createTest">Add Test</button>
                    </div>
                </div>-->
            </div>
        </div>
    </div>

</div>

<script>
import Api from '../../../utils/api';

export default {
    data(){
        return {
            currentTab: 1,
            test: null,
            showDialog: false,
            newQuestion: null,
            newOption: '',
            disableTabChange : false,
            enableFullScreen : false,
            testDuration : '',
            csvFile: null,
        }
    },
    methods:{
        uploadFile(){
            this.csvFile = this.$refs.file.files[0];
        },
        selectTab(tabNum){
            this.currentTab = tabNum;
        },
        toggleShowDialog(value){
            this.newQuestion = {
                questionText: '',
                options: [],
                correctOptions: [],
                qType: 'single'
            };
            this.showDialog = value;
        },
        addNewOption(){
            if(this.newOption !== ''){
                this.newQuestion.options.push(this.newOption);
                this.newOption = '';
            }
        },
        addNewQuestion(){
            console.log(this.newQuestion);
            let isValid = true;
            if(this.newQuestion.questionText === ''){
                isValid = false;
            }
            if((this.newQuestion.qType === 'single' || this.newQuestion.qType === 'multiple') && this.newQuestion.options.length === 0){
                isValid = false;
            }
            if(this.newQuestion.score === 0){
                isValid = false;
            }
            if(isValid){
                if(this.newQuestion.type === 'text'){
                    this.newQuestion.options = [];
                    this.newQuestion.correctOptions = [];
                }
                this.test.questions.push(this.newQuestion);
                this.toggleShowDialog(false);
            }
        },
        saveSettings(){
            console.log(this.test.settings);
            this.currentTab = 2;
        },
        async createTest(){
            if(this.test.testName === '' || this.test.questions.length === null)
                return;
            let ts = this.test.settings.totalScore;
            console.log(ts);
            let sum=0;
            this.test.questions.forEach(question => {
                console.log(question.score);
                sum+=question.score;
            });
            console.log(sum);
            if(ts!=sum){
                alert('Total score does not match sum of question score!');
                return;
            }
            if(!this.csvFile){
                return;
            }
            // var reader = new FileReader();
            // let $ = this;
            // reader.onload = async function (e) {
            //     var rows = e.target.result.split("\n");
            //     console.log(rows);
            //     $.test.users = rows;
                
            // }
            const formData = new FormData();
            formData.append('file',this.csvFile);
            formData.append('test',JSON.stringify(this.test));
            console.log(this.test);
            const response = await Api.createTest(formData);
            console.log(response);
        }
    },
    computed:{
        isFirstTabSelected(){
            return this.currentTab === 1;
        }
    },
    created(){
        this.test = {
            testName: '',
            settings: {
                testDuration: '',
                disableTabChange: false,
                enableFullScreen: false,
                severity : null,
                totalScore : null,
            }, 
            questions: [
               
            ]
        }
    }
}
</script>
